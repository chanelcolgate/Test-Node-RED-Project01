[
    {
        "id": "9995b4c2.8d8f68",
        "type": "tab",
        "label": "Weather",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3dd13241.f528fe",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3a8f1439.209bfc",
        "type": "inject",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "888db968.093858"
            ]
        ]
    },
    {
        "id": "888db968.093858",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.metaweather.com/api/location/search/?query=Ho Chi Minh",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 440,
        "y": 400,
        "wires": [
            [
                "e759e5d1.1a92a8"
            ]
        ]
    },
    {
        "id": "e759e5d1.1a92a8",
        "type": "function",
        "z": "9995b4c2.8d8f68",
        "name": "Get woeid of city",
        "func": "// Get woeid of city\nvar a = JSON.parse(msg.payload);\nmsg.payload = a[0].woeid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 460,
        "wires": [
            [
                "5e19d00a.47317"
            ]
        ]
    },
    {
        "id": "5e19d00a.47317",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.metaweather.com/api/location/{{ payload }}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 740,
        "y": 520,
        "wires": [
            [
                "62ac9f2b.cc064"
            ]
        ]
    },
    {
        "id": "22640ab2.cff386",
        "type": "inject",
        "z": "9995b4c2.8d8f68",
        "name": "Create Database",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"q\":\"CREATE DATABASE abc\"}",
        "payloadType": "json",
        "x": 340,
        "y": 60,
        "wires": [
            [
                "d25b5acd.31e488"
            ]
        ]
    },
    {
        "id": "d25b5acd.31e488",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "Create Database",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://this-influxdb:8086/query?q={{ payload.q }}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 550,
        "y": 60,
        "wires": [
            [
                "c5b508e6.2bd048"
            ]
        ]
    },
    {
        "id": "c5b508e6.2bd048",
        "type": "debug",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 60,
        "wires": []
    },
    {
        "id": "3eb7b084.82e2e",
        "type": "inject",
        "z": "9995b4c2.8d8f68",
        "name": "Drop Database",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"q\":\"DROP DATABASE abc\"}",
        "payloadType": "json",
        "x": 340,
        "y": 140,
        "wires": [
            [
                "40004167.55c87"
            ]
        ]
    },
    {
        "id": "40004167.55c87",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "Drop Database",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://this-influxdb:8086/query?q={{ payload.q }}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 540,
        "y": 140,
        "wires": [
            [
                "63f5c43b.201f5c"
            ]
        ]
    },
    {
        "id": "63f5c43b.201f5c",
        "type": "debug",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 140,
        "wires": []
    },
    {
        "id": "62ac9f2b.cc064",
        "type": "function",
        "z": "9995b4c2.8d8f68",
        "name": "Dump Data",
        "func": "// Convert to JSON\nfunction escape_string(string) {\n    return string.replace(/\\s/ig,'\\\\ ').replace(/\\,/g,'\\\\,').replace(/\\=/g,'\\\\ =');\n}\n\n// function escape_string(string) {\n//     return string;\n// }\n\n// msg.payload = escape_string(msg.payload.location_type);\n\nvar data = [];\n\nvar sun_rise = new Date(Date.parse(msg.payload.sun_rise)).getTime();\nvar sun_set = new Date(Date.parse(msg.payload.sun_set)).getTime();\n\nvar tags = [\n    `location_type=${escape_string(msg.payload.location_type)}`,\n    `title=${escape_string(msg.payload.title)}`,\n    `latt=${msg.payload.latt_long.split(',')[0]}`,\n    `long=${msg.payload.latt_long.split(',')[1]}`,\n    `country=${escape_string(msg.payload.parent.title)}`,\n    `timezone=${escape_string(msg.payload.timezone)}`\n];\n\n\n// msg.timestamp = timestamp.getTime();\n\n\nmsg.payload.consolidated_weather.forEach(element => {\n  var timestamp = new Date(Date.parse(element.created)).getTime();\n  for (var elem in element) {\n        if (elem === 'weather_state_name') {\n            var measure = elem;\n            // var value = escape_string(element[elem]);\n            var value = '\\\"' + element[elem].toString() + '\\\"';\n            data.push(`${measure},${tags.join(',')} value=${value} ${timestamp}`);\n            continue;\n        }\n        if (elem === 'wind_direction_compass') {\n            measure = elem;\n            // var value = escape_string(element[elem]);\n            value = '\\\"' + element[elem].toString() + '\\\"';\n            data.push(`${measure},${tags.join(',')} value=${value} ${timestamp}`);\n            continue;\n        }\n        if ( elem === 'id' || elem === 'weather_state_abbr') {\n          continue;\n        }\n        if (elem === 'created') {\n          continue;\n        }\n        if (elem === 'applicable_date') {\n            continue;\n        }\n        measure = elem;\n        value = element[elem];\n        data.push(`${measure},${tags.join(',')} value=${value} ${timestamp}`);\n  }\n});\n\nmsg.payload = data.join('\\n');\n// msg.payload = data;\nmsg.db = 'abc';\nmsg.precision = 'ms';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 520,
        "wires": [
            [
                "892a75f4.d6d118"
            ]
        ]
    },
    {
        "id": "39dc1e61.226f62",
        "type": "debug",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 220,
        "wires": []
    },
    {
        "id": "892a75f4.d6d118",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://this-influxdb:8086/write?db={{db}}&precision={{precision}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1150,
        "y": 520,
        "wires": [
            [
                "b88431ea.7b28c"
            ]
        ]
    },
    {
        "id": "b88431ea.7b28c",
        "type": "debug",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 520,
        "wires": []
    },
    {
        "id": "24ccbff.c78f34",
        "type": "inject",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "pu_load_short,host=server02,region=us-west value=0.55 1422568543702900257",
        "payloadType": "str",
        "x": 320,
        "y": 220,
        "wires": [
            [
                "94c282c2.d8542"
            ]
        ]
    },
    {
        "id": "94c282c2.d8542",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "Add Database",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://this-influxdb:8086/write?db=abc&precision=ns",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 540,
        "y": 220,
        "wires": [
            [
                "39dc1e61.226f62"
            ]
        ]
    },
    {
        "id": "308ec68a.21c22a",
        "type": "debug",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 640,
        "wires": []
    },
    {
        "id": "27df3d09.1cf012",
        "type": "function",
        "z": "9995b4c2.8d8f68",
        "name": "Sunset-Sunrise",
        "func": "function escape_string(string) {\n    return string.replace(/\\s/ig,'\\\\ ').replace(/\\,/g,'\\\\,').replace(/\\=/g,'\\\\ =');\n}\n\nvar sun_rise = new Date(Date.parse(msg.payload.sun_rise)).getTime();\nvar sun_set = new Date(Date.parse(msg.payload.sun_set)).getTime();\nvar timestamp = new Date(Date.parse(msg.payload.time)).getTime();\nvar data = [];\n\nvar tags = [\n    `location_type=${escape_string(msg.payload.location_type)}`,\n    `title=${escape_string(msg.payload.title)}`,\n    `latt=${msg.payload.latt_long.split(',')[0]}`,\n    `long=${msg.payload.latt_long.split(',')[1]}`,\n    `country=${escape_string(msg.payload.parent.title)}`,\n    `timezone=${escape_string(msg.payload.timezone)}`\n];\n\nvar measure = 'sun_rise';\nvalue = sun_rise;\ndata.push(`${measure},${tags.join(',')} value=${value} ${timestamp}`);\nmeasure = 'sun_set';\nvalue = sun_set;\ndata.push(`${measure},${tags.join(',')} value=${value} ${timestamp}`);\n\nmsg.payload = data.join('\\n');\nmsg.db = 'abc';\nmsg.precision = 'ms';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 700,
        "wires": [
            [
                "905a12ec.25572"
            ]
        ]
    },
    {
        "id": "905a12ec.25572",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://this-influxdb:8086/write?db={{db}}&precision={{precision}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 990,
        "y": 640,
        "wires": [
            [
                "308ec68a.21c22a"
            ]
        ]
    },
    {
        "id": "9553bdae.5faf9",
        "type": "inject",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 600,
        "wires": [
            [
                "d716955.7fb1568"
            ]
        ]
    },
    {
        "id": "d716955.7fb1568",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.metaweather.com/api/location/search/?query=Ho Chi Minh",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 440,
        "y": 660,
        "wires": [
            [
                "703edfd0.c84f9"
            ]
        ]
    },
    {
        "id": "703edfd0.c84f9",
        "type": "function",
        "z": "9995b4c2.8d8f68",
        "name": "Get woeid of city",
        "func": "// Get woeid of city\nvar a = JSON.parse(msg.payload);\nmsg.payload = a[0].woeid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 720,
        "wires": [
            [
                "5cb54a44.98cfa4"
            ]
        ]
    },
    {
        "id": "5cb54a44.98cfa4",
        "type": "http request",
        "z": "9995b4c2.8d8f68",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://www.metaweather.com/api/location/{{ payload }}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 740,
        "y": 780,
        "wires": [
            [
                "27df3d09.1cf012"
            ]
        ]
    },
    {
        "id": "d4936752.05c458",
        "type": "inject",
        "z": "3dd13241.f528fe",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 180,
        "wires": [
            [
                "b8273aa3.120f08"
            ]
        ]
    },
    {
        "id": "b8273aa3.120f08",
        "type": "debug",
        "z": "3dd13241.f528fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 180,
        "wires": []
    }
]